{% set name = "openfast" %}
{% set version = "3.0.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

# source:
#   url: https://github.com/openfast/openfast/archive/v{{ version }}.tar.gz
#   sha256: 2b368e8c8211ebed03e87fb3e89ef733b7e4be4848834da4034f8419d618446c
#   # Download the tar-ball and do `openssl sha256 file.tar.gz` to update

source:
  git_url: https://github.com/openfast/openfast.git
  git_rev: dev
  git_depth: -1 # (Defaults to -1/not shallow)

build:
  number: 0
  skip: true  # [win]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('fortran') }}
    - {{ compiler('m2w64_c') }}  # [win]
    - {{ compiler('m2w64_cxx') }}  # [win]
    - make
    - cmake
  host:
    - libblas
    - liblapack

outputs:
  - name: openfast
    build:
      script:
        - mkdir build && cd build
        - cmake .. -DDOUBLE_PRECISION=OFF -DCMAKE_INSTALL_PREFIX=${PREFIX} -DCMAKE_INSTALL_LIBDIR=lib
        - cmake --build . --target openfast --parallel
    test:
      commands:
        - openfast -h

  - name: openfast-modules
    build:
      script:
        - mkdir build && cd build
        - cmake .. -DDOUBLE_PRECISION=OFF -DCMAKE_INSTALL_PREFIX=${PREFIX} -DCMAKE_INSTALL_LIBDIR=lib
        - cmake --build . --target aerodyn_driver --parallel
        - cmake --build . --target hydrodyn_driver --parallel
    test:
      commands:
        - aerodyn_driver -h
        - hydrodyn_driver -h

  - name: openfast-libs
    build:
      script:
        - mkdir build && cd build
        - cmake .. -DDOUBLE_PRECISION=OFF -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=${PREFIX} -DCMAKE_INSTALL_LIBDIR=lib
        - cmake --build . --target openfastlib --parallel
        - cmake --build . --target openfastcpplib --parallel
    # test:
    #   requires:
    #     - {{ compiler('cxx') }}
    #     - ninja  # [win]
    #     - make   # [not win]
    #     - cmake
    #   source_files:
    #     - cmake
    #     - test
    #     - CMakeLists.txt
    #     - include  # some tests depend on files from include
    #     - src      # some tests depend on files from src
    #   commands:
    #     - set CMAKE_GENERATOR=Ninja  # [win]
    #     # Setting TBB_DIR=TRUE is needed to use libraries from the tested package,
    #     # but do not build them from sources; real path to TBBConfig files is not required,
    #     # because CMake will successfully find installed tested package.
    #     - cmake {{ cmake_args }} -DTBB_TEST=ON -DTBB_DIR=TRUE -S . -B test_build
    #     - cmake --build test_build --target {{ tests }} --parallel  # build tests
    #     - cd test_build
    #     - ctest -R "{{ ctest_regex }}" --output-on-failure

  # - name: fast.farm
  #   build:
  #     script:
  #       - mkdir build && cd build
  #       - cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DDOUBLE_PRECISION=OFF -DCMAKE_INSTALL_PREFIX=${PREFIX} -DCMAKE_INSTALL_LIBDIR=lib
  #       - cmake --build . --target FAST.Farm --parallel
  #   test:
  #     commands:
  #       - FAST.Farm -h

  # - name: tbb4py
  #   build:
  #     script:
  #       - set CMAKE_GENERATOR=Ninja  # [win]
  #       - cmake {{ cmake_args }} -DTBB4PY_BUILD=ON -DTBB_TEST=OFF -S . -B {{ tbb4py_build_dir }}
  #       - cmake --build {{ tbb4py_build_dir }} --target python_build --parallel
  #       - cmake -DCOMPONENT=tbb4py -P {{ tbb4py_build_dir }}/cmake_install.cmake
  #   requirements:
  #     build:
  #       - python                                 # [build_platform != target_platform]
  #       - cross-python_{{ target_platform }}     # [build_platform != target_platform]
  #       - {{ compiler('cxx') }}
  #       - ninja  # [win]
  #       - make   # [not win]
  #       - cmake
  #       - swig
  #     host:
  #       - python
  #       - {{ pin_subpackage('tbb-devel', exact=True) }}
  #     run:
  #       - tbb >={{ version }}                            # while python module works with any compatible tbb...
  #       - python
  #   test:
  #     requires:
  #       - python
  #       - {{ pin_subpackage('tbb', exact=True) }}        # we want to test with this specific tbb package
  #     imports:
  #       - tbb
  #       - TBB
  #     commands:
  #       - python -m TBB -h
  #       - python -m tbb -h
  #       - python -m tbb test
  #   about:
  #     summary: TBB module for Python
  #     license: Apache 2.0
  #     dev_url: https://github.com/oneapi-src/oneTBB

about:
  home: https://github.com/openfast/openfast
  license: Apache-2.0
  license_file: LICENSE
  summary: OpenFAST whole turbine simulation tool
  description: NREL-supported OpenFAST whole-turbine simulation code
  doc_url: http://openfast.readthedocs.io
  dev_url: https://github.com/openfast/openfast

extra:
  recipe-maintainers:
    - rafmudaf
    - openfast
